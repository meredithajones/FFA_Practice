{"ast":null,"code":"import _toConsumableArray from \"/Users/meredithjones/Desktop/code/Projects/fridge_for_all/Fridge_For_All/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/meredithjones/Desktop/code/Projects/fridge_for_all/Fridge_For_All/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/meredithjones/Desktop/code/Projects/fridge_for_all/Fridge_For_All/client/src/components/Inventory/InventoryList.js\";\nimport Inventory from './Inventory';\nimport InventoryCount from './InventoryCount';\nimport React, { useState } from 'react';\nimport { CSSTransition, TransitionGroup } from '';\n\nfunction InventoryList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      inventoryItems = _useState2[0],\n      setinventoryItems = _useState2[1]; //Ensures that only text will pass through the input box\n\n\n  var addInventory = function addInventory(item) {\n    var _console;\n\n    if (!item.text || /^\\s*$/.test(item.text)) {\n      return;\n    }\n\n    var newinventoryItems = [item].concat(_toConsumableArray(inventoryItems));\n    setinventoryItems(newinventoryItems);\n\n    (_console = console).log.apply(_console, [item].concat(_toConsumableArray(inventoryItems)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Dropping Something Off? Picking something up? Please add or subtract it below:\"), /*#__PURE__*/React.createElement(Inventory, {\n    onSubmit: addInventory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InventoryCount, {\n    inventoryItems: inventoryItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default InventoryList;","map":{"version":3,"sources":["/Users/meredithjones/Desktop/code/Projects/fridge_for_all/Fridge_For_All/client/src/components/Inventory/InventoryList.js"],"names":["Inventory","InventoryCount","React","useState","CSSTransition","TransitionGroup","InventoryList","inventoryItems","setinventoryItems","addInventory","item","text","test","newinventoryItems","console","log"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,EAA/C;;AAEA,SAASC,aAAT,GAAyB;AAAA,kBACsBH,QAAQ,CAAC,EAAD,CAD9B;AAAA;AAAA,MACfI,cADe;AAAA,MACCC,iBADD,kBAGrB;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAAA;;AACzB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAA0C;AACtC;AACH;;AAED,QAAME,iBAAiB,IAAIH,IAAJ,4BAAaH,cAAb,EAAvB;AAEAC,IAAAA,iBAAiB,CAACK,iBAAD,CAAjB;;AACA,gBAAAC,OAAO,EAACC,GAAR,kBAAYL,IAAZ,4BAAqBH,cAArB;AACH,GATD;;AAYA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,cAAD;AACA,IAAA,cAAc,EAAEF,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AASH;;AAED,eAAeD,aAAf","sourcesContent":["import Inventory from './Inventory';\nimport InventoryCount from './InventoryCount';\nimport React, {useState} from 'react';\nimport { CSSTransition, TransitionGroup } from ''\n\nfunction InventoryList() {\n    const[inventoryItems, setinventoryItems] = useState([])\n\n    //Ensures that only text will pass through the input box\n    const addInventory = item => {\n        if(!item.text || /^\\s*$/.test(item.text)) {\n            return\n        }\n\n        const newinventoryItems = [item, ...inventoryItems]\n\n        setinventoryItems(newinventoryItems);\n        console.log(item, ...inventoryItems);\n    };\n\n\n    return (\n        <div>\n            <h2>Dropping Something Off? Picking something up? Please add or subtract it below:</h2>\n            <Inventory onSubmit={addInventory} />\n            <InventoryCount\n            inventoryItems={inventoryItems}\n            />\n            </div>\n    );\n}\n\nexport default InventoryList\n"]},"metadata":{},"sourceType":"module"}